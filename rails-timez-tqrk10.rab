= Railsの日付とか時刻オブジェクトたちはどこのタイムゾーンにいるでしょうか

# : subtitle
#    SUBTITLE
#: author
#   zunda
# : institution
#    Heroku/Support
# : content-source
#    TokyuRubykaigi10
# : date
#    2016-05-29
# : allotted-time
#    5m
: theme
   lightning-talk-with-code

= tl;dr
= RailsではTime.zoneをつかおう

= @zundan
  # image
  # src = anmitsu.jpg
  # relative_height = 100
= @zundan
  # image
  # src = heroku-logotype-horizontal-purple.png
  # relative_width = 100

= TTaaS
= @heroku
  # image
  # src = ttaas.png
  # relative_width = 100

= Time Travel as a Service

= @edmundleexz
  # image
  # src = ttaas-irb.png
  # relative_height = 100

= mjd?
 # enscript ruby
 > Date.today == Date.tomorrow
 => true
 > Date.today
 => 2016-04-12
 > Date.yesterday
 => 2016-04-10

= mjd!
 # enscript ruby
 $ irb -r date
 > Date.today.mjd
 => 57489

修正ユリウス日

Modified Julian Date

= 再現してみよう
= HerokuはUTC
 # pango
 $ heroku run date +%Z
 Running date +%Z ... up, run.1234
 <span foreground="red">UTC</span>

= RailsをPDTに
 # enscript ruby
 # config/application.rb
 module RailsTimez
   class Application < Rails::Application
     ENV['TZ'] = 'UTC'
     config.time_zone = 'America/Los_Angeles'
   end
 end

= mjd!
 # enscript ruby
 > Date.today == Date.tomorrow
 => true
 > Date.today
 => 2016-04-12
 > Date.yesterday
 => 2016-04-10

= Ruby vs Rails (irb)
 # enscript ruby
 $ bundle exec irb -r timecop
 > Timecop.freeze(
   Time.new(2016, 4, 11, 18, 59, 0, "-07:00"))
 => 2016-04-12 01:59:00 +0000
 
 > Date.today
 => <Date: 2016-04-11 (...)>
 > Date.yesterday
 # undefined method `yesterday' for Date:Class
 > Date.tomorrow
 # undefined method `tomorrow' for Date:Class

= Ruby vs Rails (rails c)
 # enscript ruby
 $ bundle exec rails c
 > Timecop.freeze(
   Time.new(2016, 4, 11, 18, 59, 0, "-07:00"))
 => 2016-04-12 01:59:00 +0000
 
 > Date.today
 => Tue, 12 Apr 2016
 > Date.yesterday
 => Sun, 10 Apr 2016
 > Date.tomorrow
 => Tue, 12 Apr 2016

= Ruby vs Rails
 # enscript ruby
 $ bundle exec irb -r timecop
 > Timecop.freeze(
   Time.new(2016, 4, 11, 18, 59, 0, "-07:00"))
 => 2016-04-12 01:59:00 +0000

* 4月12日 (UTC +00:00)
* 4月11日 (PDT -07:00)

= Railsを知らない子はその設定を知らない
= Date.todayはRuby
= 昨日と明日はRails

= qiita.com/jnchito
= 「RailsならTimeWithZoneを使う」

= TimeWithZone
 # enscript ruby
 $ bundle exec rails c
 > Time.zone.today == Time.zone.tomorrow
 => false
 > Time.zone.today
 => Mon, 11 Apr 2016
 > Time.zone.yesterday
 => Sun, 10 Apr 2016

= TimeWithZone
 # enscript ruby
 $ bundle exec rails c
 > Time.now
 => 2016-04-12 01:59:00 +0000
 > Time.zone.now
 => Mon, 11 Apr 2016 18:59:00 PDT -07:00

* 4月12日 (UTC +00:00)
* 4月11日 (PDT -07:00)

= ユーザー毎のタイムゾーン変換
= ※Pumaはマルチスレッド
= タイムゾーン変換
 # enscript ruby
 Thread.new do
   ENV['TZ'] = tz
   time_str = time.strftime("%H:%M")
     :
 end
= タイムゾーン変換
 # enscript sh
 $ bundle exec rake timezones:sys:travel
 Traveling time ...!!!!
 03:00 UTC became 22:00 in Japan (shuold be 12:00)
 03:00 UTC became 03:00 in HST (shuold be 17:00)
 03:00 UTC became 12:00 in EST (shuold be 22:00)
 03:00 UTC became 17:00 in Japan (shuold be 12:00)
= ENV['TZ']変えるのはスレッドセーフじゃない
= タイムゾーン変換
 # enscript ruby
 Thread.new do
   time_str = time_with_zone.\
     in_time_zone(tz).strftime("%H:%M")
     :
 end
= タイムゾーン変換
 # enscript sh
 $ bundle exec rake timezones:rails:travel
 Traveling time ...
 completed time travel
= in_time_zoneはスレッドセーフっぽい

= どうやって？
= どうやって？
 # enscript sh
 $ grep tz Gemfile.lock
      tzinfo (~> 1.1)
    tzinfo (1.2.2)
= github/tzinfo/tzinfo
= Ruby Timezone Library
= メンテナンス大変じゃね？
= "search for a zoneinfo directory"
= Zoneinfo directory
 # enscript ruby
 > require 'tzinfo/data'
 # LoadError: cannot load such file -- tzinfo/data
 > TZInfo::ZoneinfoDataSource::DEFAULT_SEARCH_PATH
 => ["/usr/share/zoneinfo",
     "/usr/share/lib/zoneinfo",
     "/etc/zoneinfo"]
= Zoneinfo directory
 # enscript sh
 $ ls /usr/share/zoneinfo/
 +VERSION    Cuba      GMT-0     MET       ROK
 Africa/     EET       GMT0      MST       Singapore
 America/    EST       Greenwich MST7MDT   Turkey
 Antarctica/ EST5EDT   HST       Mexico/   UCT
 Arctic/     Egypt     Hongkong  NZ        US/
 Asia/       Eire      Iceland   NZ-CHAT   UTC
 Atlantic/   Etc/      Indian/   Navajo    Universal
 Australia/  Europe/   Iran      PRC       W-SU
 Brazil/     Factory   Israel    PST8PDT   WET
 CET         GB        Jamaica   Pacific/  Zulu
 CST6CDT     GB-Eire   Japan     Poland    iso3166.tab
 Canada/     GMT       Kwajalein Portugal  posixrules
 Chile/      GMT+0     Libya     ROC       zone.tab
= よくできてた！
= よくできてた！
 $ bundle exec rake tzinfo:patch
   :
 TZInfo::TimezoneOffset.new
   @abbreviation = KST
   @std_offset = 0
   @utc_offset = 32400
   @utc_total_offset = 32400
 TZInfo::TimezoneOffset#to_local(2015-08-15 00:00:00 UTC)
 2015-08-15 08:30:00 +0830

= ちなみに
= github/tzinfo/ tzinfo-data
= Timezone Data for TZInfo
= あればこっちを使う
= github/tzinfo/tzinfo-data
  # image
  # src = tzinfo-data-2016d.png
  # relative_width = 100
= ちゃんとメンテナンスされてる！

= あ、そういえば
= Heroku Postgres
= Heroku Postgres
 # enscript sql
 $ heroku pg:psql
 ---> Connecting to DATABASE_URL
   :
 app-name:DATABASE=> SELECT current_date, current_time;
     date    |       timetz       
 ------------+--------------------
  2016-05-12 | 03:05:14.943494+00
 (1 row)
UTCで待ってます。

= ところで
= サポート
= 「昨日の夜アプリが遅かったんだけど」
= どこのタイムゾーンで昨日よー
= そもそも 今 何日よー
= 時刻には日付とタイムゾーンもよろしく

= タイムゾーン重要

= URLs
* @heroku/status/719712029343395841
* @edmundleexz/status/719706359759917056
* github.com/zunda/rails-timez
* qiita.com/jnchito/items/cae89ee43c30f5d6fa2c

= CC BY-ND 4.0
Presented as a lightning talk in TokyuRubykaigi10 #tqrk10 on 2016-05-29

Copyright 2016 by zunda <zundan@gmail.com>

* github.com/zunda
* twitter.com/zundan
